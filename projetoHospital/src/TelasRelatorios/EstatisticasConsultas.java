/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package TelasRelatorios;

import TelasInternas.*;
import Controllers.Consultas;
import Controllers.Pacientes;
import Modulos.IdAutomatico;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 *
 * @author tung tung tung sahur
 */
public class EstatisticasConsultas extends javax.swing.JInternalFrame {

    private static final String FILE_PATH_MEDICOS = "data/medicos.csv";
    private static final String FILE_PATH_PACIENTES = "data/pacientes.csv";
    private static final String FILE_PATH_CONSULTAS = "data/consultas.csv";

    /**
     * Creates new form AgendamentoConsultas
     */
    public EstatisticasConsultas() {
        initComponents();
        tabelaConsultas.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaConsultas = new javax.swing.JTable();
        pesquisarConsulta = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Calibri Light", 0, 36)); // NOI18N
        jLabel1.setText("Estatística das Consultas");

        jLabel5.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabel5.setText("Tabela Consultas");

        tabelaConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome do Médico", "Nome do Paciente", "Horario da Consulta", "Sala da Consulta", "Situação", "Custo da Consulta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaConsultas.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaConsultasAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane5.setViewportView(tabelaConsultas);
        if (tabelaConsultas.getColumnModel().getColumnCount() > 0) {
            tabelaConsultas.getColumnModel().getColumn(0).setResizable(false);
            tabelaConsultas.getColumnModel().getColumn(1).setResizable(false);
            tabelaConsultas.getColumnModel().getColumn(2).setResizable(false);
            tabelaConsultas.getColumnModel().getColumn(3).setResizable(false);
            tabelaConsultas.getColumnModel().getColumn(4).setResizable(false);
            tabelaConsultas.getColumnModel().getColumn(5).setResizable(false);
            tabelaConsultas.getColumnModel().getColumn(6).setResizable(false);
        }

        pesquisarConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search_24dp_5F6368_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        pesquisarConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesquisarConsultaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(439, 439, 439)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(pesquisarConsulta)))
                        .addGap(0, 497, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(351, 351, 351)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisarConsulta)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaConsultasAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaConsultasAncestorAdded
        DefaultTableModel modelTabela = (DefaultTableModel) tabelaConsultas.getModel();
        modelTabela.setNumRows(0);

        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_PATH_CONSULTAS))) {
            String linha;

            while ((linha = reader.readLine()) != null) {
                String[] data = linha.split(",");

                if(Objects.equals(data[5], "Concluída")) {
                    Object[] dados = { data[0], retornaNomeMedico(Integer.parseInt(data[2])), retornaNomePaciente(Integer.parseInt(data[1])), data[3], data[4], data[5], Double.parseDouble(data[6])};
                    modelTabela.addRow(dados);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Houve algum erro na criação automática da lista de consultas");
        }
    }//GEN-LAST:event_tabelaConsultasAncestorAdded

    private void pesquisarConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisarConsultaMouseClicked
        String nomeUsuario = JOptionPane.showInputDialog("Digite o nome do médico: ");
        if(nomeUsuario == null) {
            JOptionPane.showMessageDialog(null, "Operação cancelada!");
            return;
        }

        if(nomeUsuario.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nada foi digitado!");
            return;
        }

        DefaultTableModel modelTabela = (DefaultTableModel) tabelaConsultas.getModel();
        modelTabela.setNumRows(0);

        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_PATH_CONSULTAS))) {
            String linha;

            if((linha = reader.readLine()) == null) {
                JOptionPane.showMessageDialog(null, "Não existe nenhuma consulta!");
                return;
            } else {
                String[] data = linha.split(",");
                if(retornaNomeMedico(Integer.parseInt(data[2])).toLowerCase().contains(nomeUsuario.toLowerCase()) && Objects.equals(data[5], "Concluída"))  {
                    Object[] dados = { data[0], retornaNomeMedico(Integer.parseInt(data[2])), retornaNomePaciente(Integer.parseInt(data[1])), data[3], data[4], data[5], Double.parseDouble(data[6])};
                    modelTabela.addRow(dados);
                }
            }

            while ((linha = reader.readLine()) != null) {
                String[] data = linha.split(",");
                if(retornaNomeMedico(Integer.parseInt(data[2])).toLowerCase().contains(nomeUsuario.toLowerCase()) && Objects.equals(data[5], "Concluída"))  {
                    Object[] dados = { data[0], retornaNomeMedico(Integer.parseInt(data[2])), retornaNomePaciente(Integer.parseInt(data[1])), data[3], data[4], data[5], Double.parseDouble(data[6])};
                    modelTabela.addRow(dados);
                }
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Houve algum erro na pesquisa dos pacientes!");
        }
    }//GEN-LAST:event_pesquisarConsultaMouseClicked

    // retorna o nome do paciente baseado no id enviado, funcionando como se fosse um inner join no mysql
    public String retornaNomePaciente(int idPaciente) {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_PATH_PACIENTES))) {
            String linha;

            if((linha = reader.readLine()) == null) {
                return null;
            } else {
                String[] data = linha.split(",");
                if(idPaciente == Integer.parseInt(data[0])) {
                    return data[1];
                }
            }

            while ((linha = reader.readLine()) != null) {
                String[] data = linha.split(",");
                if(idPaciente == Integer.parseInt(data[0])) {
                    return data[1];
                }
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Houve algum erro na listagem automática dos IDs");
        }

        return null;
    }

    // retorna o nome do médico baseado no id enviado, funcionando como se fosse um inner join no mysql
    public String retornaNomeMedico(int idMedico) {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_PATH_MEDICOS))) {
            String linha;

            if((linha = reader.readLine()) == null) {
                return null;
            } else {
                String[] data = linha.split(",");
                if(idMedico == Integer.parseInt(data[0])) {
                    return data[1];
                }
            }

            while ((linha = reader.readLine()) != null) {
                String[] data = linha.split(",");
                if(idMedico == Integer.parseInt(data[0])) {
                    return data[1];
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Houve algum erro na listagem automática dos IDs");
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel pesquisarConsulta;
    private javax.swing.JTable tabelaConsultas;
    // End of variables declaration//GEN-END:variables
}
